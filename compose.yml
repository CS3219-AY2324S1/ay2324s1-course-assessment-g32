services:
  nginx:
    container_name: nginx
    image: nginx:latest
    ports: ['3000:80']
    volumes:
      - ./Nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - svc-web-ui

  db-user:
    container_name: user-storage
    image: mysql/mysql-server:8.0
    env_file: .env
    ports: ['3306:3306']
    volumes:
      - ./User/initdb:/docker-entrypoint-initdb.d

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    ports: ['5672:5672']

  svc-user:
    container_name: user-service
    build: ./User
    env_file: .env
    environment:
      - MYSQL_HOST=db-user
      - AUTH_HOST=svc-auth
    ports: ['4001:4001']
    depends_on:
      db-user:
        condition: service_started
        restart: true
      svc-auth:
        condition: service_started

  svc-auth:
    container_name: auth-service
    build: ./Auth
    env_file: .env
    ports: ['5001:5001']

  svc-question:
    container_name: question-service
    build: ./Question
    env_file: .env
    environment:
      - AUTH_HOST=svc-auth
    ports: ['6001:6001']
    depends_on:
      - svc-auth

  svc-match:
    container_name: match-service
    build: ./Match
    env_file: .env
    environment:
      - RABBITMQ_HOST=rabbitmq
      - AUTH_HOST=svc-auth
    ports: ['7001:7001']
    depends_on:
      rabbitmq:
        condition: service_started
        restart: true
      svc-auth:
        condition: service_started

  svc-collab:
    container_name: collab-service
    build: ./Collaboration
    env_file: .env
    ports: ['8001:8001']

  svc-web-ui:
    container_name: web-ui
    build: ./frontend
    env_file: .env
    depends_on:
      - svc-user
      - svc-auth
      - svc-question
      - svc-match
      - svc-collab
